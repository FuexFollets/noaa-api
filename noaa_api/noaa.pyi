"""
This type stub file was generated by pyright.
"""

import aiohttp
import aiolimiter
import noaa_api.json_schemas as json_schemas
import noaa_api.parameter_schemas as parameter_schemas
from typing import ClassVar

class NOAAClient:
    token: str
    tcp_connector: aiohttp.TCPConnector
    aiohttp_session: aiohttp.ClientSession
    seconds_request_limiter: aiolimiter.AsyncLimiter
    daily_request_limiter: aiolimiter.AsyncLimiter
    ENDPOINT: ClassVar[str] = ...
    def __init__(self, token: str, tcp_connector_limit: int = ..., keepalive_timeout: int = ...) -> None:
        ...
    
    async def get_datasets(self, id: str | None = ..., *, datatypeid: str | list[str] = ..., locationid: str | list[str] = ..., stationid: str | list[str] = ..., startdate: str = ..., enddate: str = ..., sortfield: parameter_schemas.Sortfield = ..., sortorder: parameter_schemas.Sortorder = ..., limit: int = ..., offset: int = ...) -> json_schemas.DatasetsJSON | json_schemas.RateLimitJSON:
        ...
    
    async def get_data_categories(self, id: str | None = ..., *, datasetid: str | list[str] = ..., locationid: str | list[str] = ..., stationid: str | list[str] = ..., startdate: str = ..., enddate: str = ..., sortfield: parameter_schemas.Sortfield = ..., sortorder: parameter_schemas.Sortorder = ..., limit: int = ..., offset: int = ...) -> json_schemas.DatacategoriesJSON | json_schemas.RateLimitJSON:
        ...
    
    async def get_datatypes(self, id: str | None = ..., *, datasetid: str | list[str] = ..., locationid: str | list[str] = ..., stationid: str | list[str] = ..., startdate: str = ..., enddate: str = ..., sortfield: parameter_schemas.Sortfield = ..., sortorder: parameter_schemas.Sortorder = ..., limit: int = ..., offset: int = ...) -> json_schemas.DatatypesJSON | json_schemas.RateLimitJSON:
        ...
    
    async def get_location_categories(self, id: str | None = ..., *, datasetid: str | list[str] = ..., locationid: str | list[str] = ..., stationid: str | list[str] = ..., startdate: str = ..., enddate: str = ..., sortfield: parameter_schemas.Sortfield = ..., sortorder: parameter_schemas.Sortorder = ..., limit: int = ..., offset: int = ...) -> json_schemas.LocationcategoriesJSON | json_schemas.RateLimitJSON:
        ...
    
    async def get_locations(self, id: str | None = ..., *, datasetid: str | list[str] = ..., locationid: str | list[str] = ..., stationid: str | list[str] = ..., startdate: str = ..., enddate: str = ..., sortfield: parameter_schemas.Sortfield = ..., sortorder: parameter_schemas.Sortorder = ..., limit: int = ..., offset: int = ...) -> json_schemas.LocationsJSON | json_schemas.RateLimitJSON:
        ...
    
    async def get_stations(self, id: str | None = ..., *, datasetid: str | list[str] = ..., locationid: str | list[str] = ..., stationid: str | list[str] = ..., startdate: str = ..., enddate: str = ..., sortfield: parameter_schemas.Sortfield = ..., sortorder: parameter_schemas.Sortorder = ..., limit: int = ..., offset: int = ...) -> json_schemas.StationsJSON | json_schemas.RateLimitJSON:
        ...
    
    async def get_data(self, datasetid: str, startdate: str, enddate: str, *, datatypeid: str | list[str] = ..., locationid: str | list[str] = ..., stationid: str | list[str] = ..., units: parameter_schemas.Units = ..., sortfield: parameter_schemas.Sortfield = ..., sortorder: parameter_schemas.Sortorder = ..., limit: int = ..., offset: int = ..., includemetadata: bool = ...) -> json_schemas.DataJSON | json_schemas.RateLimitJSON:
        ...
    
    def close(self): # -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    


